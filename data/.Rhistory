print(length(events_dic$music))
print("art")
print(length(events_dic$art))
print("education")
print(length(events_dic$education))
toJSON(events_dic)
library(Rfacebook)
library(rjson)
library(jsonlite)
library(httr)
fb_oauth = "EAACEdEose0cBAKAkBSpNDUI2NO2rJQZARehluiJHRZA8DNr56qyWMkTUBZCZBZCqjITqhXXsXnp1m7jjADB76YZBoUOzV2qh4ccawK31qlHeDs8jt8TKhAweQn7L7MYvb8PBA9uiHHvGjuysyEFqXJL5UFjMHEdtPqwtcXfMzi4zez7nAGpSJQPn0SBrWjKmZAEvNcc2HLqZBQZDZD"
url = "https://graph.facebook.com/v2.12/search?type=event&limit=1000&fields=id&q="
categories = c('travel', 'food', 'music', 'art', 'education')
events_dic = list()
for(cat in categories){
#print()
events = fromJSON(paste(url,cat,"&access_token=",fb_oauth,sep=""))
events_dic[cat] = events$data
}
print("travel")
print(length(events_dic$travel))
print("food")
print(length(events_dic$food))
print("music")
print(length(events_dic$music))
print("art")
print(length(events_dic$art))
print("education")
print(length(events_dic$education))
result = toJSON(events_dic)
write(result, "ids.json")
getcwd()
getwd()
library(Rfacebook)
library(rjson)
library(jsonlite)
library(httr)
setwd("~/fb_event_minor/data/")
fb_oauth = "EAACEdEose0cBAKAkBSpNDUI2NO2rJQZARehluiJHRZA8DNr56qyWMkTUBZCZBZCqjITqhXXsXnp1m7jjADB76YZBoUOzV2qh4ccawK31qlHeDs8jt8TKhAweQn7L7MYvb8PBA9uiHHvGjuysyEFqXJL5UFjMHEdtPqwtcXfMzi4zez7nAGpSJQPn0SBrWjKmZAEvNcc2HLqZBQZDZD"
url = "https://graph.facebook.com/v2.12/search?type=event&limit=1000&fields=id&q="
categories = c('travel', 'food', 'music', 'art', 'education')
events_dic = list()
for(cat in categories){
#print()
events = fromJSON(paste(url,cat,"&access_token=",fb_oauth,sep=""))
events_dic[cat] = events$data
}
print("travel")
print(length(events_dic$travel))
print("food")
print(length(events_dic$food))
print("music")
print(length(events_dic$music))
print("art")
print(length(events_dic$art))
print("education")
print(length(events_dic$education))
result = toJSON(events_dic)
write(result, "ids.json")
getwd()
events_dic = fromJSON(file = "ids.json")
c = c("A","B")
l = list()
for(i in c){}
for(i in c){
l[c]=seq(1:5)
print()
}
c = c("A","B")
l = list()
for(i in c){
l[i]=seq(1:5)
print(l[i])
}
for(i in c){
l[i]=seq(1,5)
print(l[i])
}
install.packages("RMongo")
library(RMongo)
for(cat in names(events_dic))
{
print(cat)
print(length(events_dic[[cat]]))
}
sum = 0
sum = 0
for(cat in names(events_dic))
{
print(cat)
print(length(events_dic[[cat]]))
sum = sum + length(events_dic[[cat]])
}
print(paste("Total:",sum))
all_possible_events = c(all_possible_fields_events = 'attending_count, can_guests_invite, can_viewer_post, category, cover, declined_count, description, end_time, guest_list_enabled, interested_count, is_canceled, is_draft, is_page_owned, is_viewer_admin, maybe_count, name, noreply_count, owner, parent_group, place, start_time, ticket_uri, ticketing_privacy_uri, ticketing_terms_uri, timezone, type, updated_time')
?mongoDbConnect
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4000)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
print(current_id)
}
}
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
temp_event = fromJSON(paste(url,current_id,"?fields=",all_possible_events,sep=""))
count += 1
}
}
print(count)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
temp_event = fromJSON(paste(url,current_id,"?fields=",all_possible_events,sep=""))
count = count + 1
}
}
print(count)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
temp_event = fromJSON(paste(url,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = count + 1
}
}
print(count)
fb_oauth = "EAACEdEose0cBAIQaz25ZA0VGIklYyyTCSD8szqkMN7O6QmS8z4lKz8FtqYvOTqtFCZB5hOgdENRtXAg7wLCe0bGkzTHeqTn3H5kUjN36QdrlbN35ZB55nAC3TNZC1Hoeq6Iy3nEY6YrxXK4aFwhUaTALwW9kMPgLL4yt0PyEZB2JSKe1BscHkSJTuVWZBxZAPW9lYBXt0Y33gZDZD"
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
temp_event = fromJSON(paste(url,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = count + 1
}
}
print(count)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
print(typeof(current_id))
temp_event = fromJSON(paste(url,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = count + 1
}
}
print(paste(url,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = count + 1
}
}
print(count)
print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
count = count + 1
}
}
View(temp_event)
temp_event[["attending_count"]]
View(temp_event)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
typeof(temp_event)
#dbInsertDocument(mongo, "events", )
count = count + 1
}
}
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
typeof(temp_event)
#dbInsertDocument(mongo, "events", )
count = count + 1
}
}
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
print(typeof(temp_event))
#dbInsertDocument(mongo, "events", )
count = count + 1
}
}
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4000)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
dbInsertDocument(mongo, "events", temp_event)
count = count + 1
}
}
print(count)
?dbInsertDocument
typeof(mongo)
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4000)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
dbInsertDocument(mongo, "events", toJSON(temp_event))
count = count + 1
}
}
print(count)
rm(c,i)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4000)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
output = dbInsertDocument(mongo, "events", toJSON(temp_event))
print(output)
count = count + 1
}
}
mongo <- mongoDbConnect("test")
output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
dbDisconnect(mongo)
mongo <- mongoDbConnect("test")
output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
mongo <- mongoDbConnect("test")
output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4000)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
output = dbInsertDocument(mongo, "events", toJSON(temp_event))
print(output)
count = count + 1
}
}
print(count)
install.packages("mongolite")
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4001)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
output = dbInsertDocument(mongo, "events", toJSON(temp_event))
print(output)
count = count + 1
}
}
print(count)
temp_event
toJSON(temp_event)
mongo <- mongoDbConnect("test")
res = toJSON(temp_event)
output <- dbInsertDocument(mongo, "test_data", 'res')
res = as.character(res)
res
output <- dbInsertDocument(mongo, "test_data", res)
output
output <- dbGetQueryForKeys(mongo, 'test_data', '{"foo": "bar"}', '{"foo":1}')
output
output <- dbGetQueryForKeys(mongo, 'test_data', '{"category":"travel"}')
?dbGetQueryForKeys
?dbGetQuery
output <- dbGetQuery(mongo, 'test_data', '{"category":"travel"}')
outer()
output
View(output)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4001)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4002)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4002)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4003)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4003)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4003)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
print(res)
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
mongo <- mongoDbConnect("precog_fb_data", host = "127.0.0.1", port = 4003)
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
print(res)
output = dbInsertDocument(mongo, "test_data", res)
count = count + 1
}
}
print(count)
output <- dbInsertDocument(mongo, "test_data", res)
mongo = mongoDbConnect("test")
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data")
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
print(res)
output = dbInsertDocument(mongo, "test_data", res)
count = count + 1
}
}
print(count)
output <- dbGetQuery(mongo, 'test_data', '{"category":"travel"}')
output
all_possible_events = c(all_possible_fields_events = 'attending_count,can_guests_invite,can_viewer_post,category,cover,declined_count,description,end_time,guest_list_enabled,interested_count,is_canceled,is_draft,is_page_owned,is_viewer_admin,maybe_count,name,noreply_count,owner,parent_group,place,start_time,ticket_uri,ticketing_privacy_uri,ticketing_terms_uri,timezone,type,updated_time')
mongo <- mongoDbConnect("precog_fb_data")
count = 0
url_details  = "https://graph.facebook.com/"
for(cat in names(events_dic)){
for(current_id in events_dic[[cat]]){
#print(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event = fromJSON(paste(url_details,current_id,"?fields=",all_possible_events,"&access_token=",fb_oauth,sep=""))
temp_event$category = cat
#print(typeof(temp_event))
res = as.character(toJSON(temp_event))
print(res)
output = dbInsertDocument(mongo, "events", res)
count = count + 1
}
}
print(count)
output <- dbGetQuery(mongo, 'test_data', '{"category":"travel"}')
output
View(output)
library(Rfacebook)
library(rjson)
library(jsonlite)
library(httr)
library(RMongo)
library(mon)
setwd("~/fb_event_minor/data/")
fb_oauth = "EAACEdEose0cBACvFKov6wUjk6vXwf3nX5pbjNLlLvbYxWt5xjRs96RE3Rnl1DUubAs76Mjc9PRcaUZBOPkau4oTsV4efJJia1Es98ZCVy6hL3K8hRBdDrcFZCrdQ25M02ZAbb3b6qoef2EfZB922ZBxYUqvYXev6UjE94ghbPzfync83zxelLnVdZB1kAnGkoWuGxZBQOenrHAZDZD"
url = "https://graph.facebook.com/v2.12/search?type=event&limit=1000&fields=id&q="
categories = c('travel', 'food', 'music', 'art', 'education')
events_dic = list()
for(cat in categories){
#print()
events = fromJSON(paste(url,cat,"&access_token=",fb_oauth,sep=""))
events_dic[cat] = events$data
}
library(Rfacebook)
library(rjson)
library(jsonlite)
library(httr)
library(RMongo)
library(mon)
setwd("~/fb_event_minor/data/")
fb_oauth = "EAACEdEose0cBACvFKov6wUjk6vXwf3nX5pbjNLlLvbYxWt5xjRs96RE3Rnl1DUubAs76Mjc9PRcaUZBOPkau4oTsV4efJJia1Es98ZCVy6hL3K8hRBdDrcFZCrdQ25M02ZAbb3b6qoef2EfZB922ZBxYUqvYXev6UjE94ghbPzfync83zxelLnVdZB1kAnGkoWuGxZBQOenrHAZDZD"
url = "https://graph.facebook.com/v2.12/search?type=event&limit=1000&fields=id&q="
categories = c('travel', 'food', 'music', 'art', 'education')
events_dic = list()
for(cat in categories){
#print()
events = fromJSON(paste(url,cat,"&access_token=",fb_oauth,sep=""))
events_dic[cat] = events$data
}
q()
